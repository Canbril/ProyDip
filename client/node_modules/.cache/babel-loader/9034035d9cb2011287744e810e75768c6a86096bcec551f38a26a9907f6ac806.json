{"ast":null,"code":"var _jsxFileName = \"/home/canbril/Documentos/Prueba/ProyDip/client/src/SignFile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport jwt_decode from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignFile({\n  token\n}) {\n  _s();\n  const [archivoId, setArchivoId] = useState('');\n  const [privateKeyFile, setPrivateKeyFile] = useState(null);\n  const [userFiles, setUserFiles] = useState([]);\n  const [username, setUsername] = useState('');\n  useEffect(() => {\n    const decodedToken = jwt_decode(token);\n    setUsername(decodedToken.username);\n    const fetchUserFiles = async () => {\n      try {\n        const response = await fetch(`${process.env.REACT_APP_API_URL}/api/files/user-files`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        const files = await response.json();\n        setUserFiles(files);\n      } catch (error) {\n        console.error('Error al obtener los archivos:', error);\n      }\n    };\n    fetchUserFiles();\n  }, [token]);\n  const handlePrivateKeyUpload = e => {\n    setPrivateKeyFile(e.target.files[0]);\n  };\n  const handleSignFile = async () => {\n    if (!privateKeyFile || !archivoId) {\n      alert('Por favor, selecciona un archivo y carga la clave privada.');\n      return;\n    }\n    const privateKey = await privateKeyFile.text();\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/files/sign`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          archivo_id: archivoId,\n          privateKey\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Error al firmar el archivo');\n      }\n      const data = await response.json();\n      alert(`Archivo firmado exitosamente. Firma: ${data.signature}`);\n    } catch (error) {\n      console.error('Error al firmar el archivo:', error);\n      alert('Error al firmar el archivo');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Firmar Archivo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: archivoId,\n      onChange: e => setArchivoId(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Selecciona un archivo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), userFiles.map(file => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: file.id,\n        children: file.nombre_archivo\n      }, file.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".pem\",\n      onChange: handlePrivateKeyUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignFile,\n      children: \"Firmar Archivo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(SignFile, \"A8N1XaVzJJSgNdw0QFNRgR4kZCk=\");\n_c = SignFile;\nexport default SignFile;\nvar _c;\n$RefreshReg$(_c, \"SignFile\");","map":{"version":3,"names":["React","useState","useEffect","jwt_decode","jsxDEV","_jsxDEV","SignFile","token","_s","archivoId","setArchivoId","privateKeyFile","setPrivateKeyFile","userFiles","setUserFiles","username","setUsername","decodedToken","fetchUserFiles","response","fetch","process","env","REACT_APP_API_URL","headers","files","json","error","console","handlePrivateKeyUpload","e","target","handleSignFile","alert","privateKey","text","method","body","JSON","stringify","archivo_id","ok","Error","data","signature","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","map","file","id","nombre_archivo","type","accept","onClick","_c","$RefreshReg$"],"sources":["/home/canbril/Documentos/Prueba/ProyDip/client/src/SignFile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport jwt_decode from 'jwt-decode';\n\nfunction SignFile({ token }) {\n    const [archivoId, setArchivoId] = useState('');\n    const [privateKeyFile, setPrivateKeyFile] = useState(null);\n    const [userFiles, setUserFiles] = useState([]);\n    const [username, setUsername] = useState('');\n\n    useEffect(() => {\n        const decodedToken = jwt_decode(token);\n        setUsername(decodedToken.username);\n\n        const fetchUserFiles = async () => {\n            try {\n                const response = await fetch(`${process.env.REACT_APP_API_URL}/api/files/user-files`, {\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                    },\n                });\n                const files = await response.json();\n                setUserFiles(files);\n            } catch (error) {\n                console.error('Error al obtener los archivos:', error);\n            }\n        };\n\n        fetchUserFiles();\n    }, [token]);\n\n    const handlePrivateKeyUpload = (e) => {\n        setPrivateKeyFile(e.target.files[0]);\n    };\n\n    const handleSignFile = async () => {\n        if (!privateKeyFile || !archivoId) {\n            alert('Por favor, selecciona un archivo y carga la clave privada.');\n            return;\n        }\n\n        const privateKey = await privateKeyFile.text();\n\n        try {\n            const response = await fetch(`${process.env.REACT_APP_API_URL}/api/files/sign`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                },\n                body: JSON.stringify({ archivo_id: archivoId, privateKey }),\n            });\n\n            if (!response.ok) {\n                throw new Error('Error al firmar el archivo');\n            }\n\n            const data = await response.json();\n            alert(`Archivo firmado exitosamente. Firma: ${data.signature}`);\n        } catch (error) {\n            console.error('Error al firmar el archivo:', error);\n            alert('Error al firmar el archivo');\n        }\n    };\n\n    return (\n        <div>\n            <h2>Firmar Archivo</h2>\n            <select value={archivoId} onChange={(e) => setArchivoId(e.target.value)}>\n                <option value=\"\">Selecciona un archivo</option>\n                {userFiles.map((file) => (\n                    <option key={file.id} value={file.id}>{file.nombre_archivo}</option>\n                ))}\n            </select>\n            <input type=\"file\" accept=\".pem\" onChange={handlePrivateKeyUpload} />\n            <button onClick={handleSignFile}>Firmar Archivo</button>\n        </div>\n    );\n}\n\nexport default SignFile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}