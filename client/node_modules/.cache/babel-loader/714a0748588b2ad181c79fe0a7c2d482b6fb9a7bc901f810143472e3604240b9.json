{"ast":null,"code":"var _jsxFileName = \"/home/canbril/Documentos/Prueba/ProyDip/client/src/VerifySignature.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VerifySignature({\n  token\n}) {\n  _s();\n  const [signatures, setSignatures] = useState([]);\n  const [selectedSignature, setSelectedSignature] = useState('');\n  const [verificationResult, setVerificationResult] = useState(null);\n  useEffect(() => {\n    // Obtener las firmas del usuario\n    const fetchSignatures = async () => {\n      try {\n        const response = await fetch(`${process.env.REACT_APP_API_URL}/api/files/signatures`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        setSignatures(data);\n      } catch (error) {\n        console.error('Error al obtener firmas:', error);\n      }\n    };\n    fetchSignatures();\n  }, [token]);\n  const handleVerifySignature = async () => {\n    try {\n      const [archivo_id, signature] = selectedSignature.split(',');\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/files/verify`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          archivo_id,\n          signature\n        })\n      });\n      const data = await response.json();\n      setVerificationResult(data.isValid ? 'Firma v치lida' : 'Firma inv치lida');\n    } catch (error) {\n      console.error('Error al verificar la firma:', error);\n      setVerificationResult('Error al verificar la firma');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Verificar Firma\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedSignature,\n      onChange: e => setSelectedSignature(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Seleccione una firma\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), signatures.map(sig => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: `${sig.archivo_id},${sig.signature}`,\n        children: [\"Archivo ID: \", sig.archivo_id, \" - Fecha: \", new Date(sig.created_at).toLocaleString()]\n      }, sig.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleVerifySignature,\n      children: \"Verificar Firma\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), verificationResult && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: verificationResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(VerifySignature, \"hJ3wT1pDIHBcnJqgHMTKtyVfbu0=\");\n_c = VerifySignature;\nexport default VerifySignature;\nvar _c;\n$RefreshReg$(_c, \"VerifySignature\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","VerifySignature","token","_s","signatures","setSignatures","selectedSignature","setSelectedSignature","verificationResult","setVerificationResult","fetchSignatures","response","fetch","process","env","REACT_APP_API_URL","headers","data","json","error","console","handleVerifySignature","archivo_id","signature","split","method","body","JSON","stringify","isValid","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","sig","Date","created_at","toLocaleString","id","onClick","_c","$RefreshReg$"],"sources":["/home/canbril/Documentos/Prueba/ProyDip/client/src/VerifySignature.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction VerifySignature({ token }) {\n    const [signatures, setSignatures] = useState([]);\n    const [selectedSignature, setSelectedSignature] = useState('');\n    const [verificationResult, setVerificationResult] = useState(null);\n\n    useEffect(() => {\n        // Obtener las firmas del usuario\n        const fetchSignatures = async () => {\n            try {\n                const response = await fetch(`${process.env.REACT_APP_API_URL}/api/files/signatures`, {\n                    headers: { 'Authorization': `Bearer ${token}` },\n                });\n                const data = await response.json();\n                setSignatures(data);\n            } catch (error) {\n                console.error('Error al obtener firmas:', error);\n            }\n        };\n\n        fetchSignatures();\n    }, [token]);\n\n    const handleVerifySignature = async () => {\n        try {\n            const [archivo_id, signature] = selectedSignature.split(',');\n            const response = await fetch(`${process.env.REACT_APP_API_URL}/api/files/verify`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`,\n                },\n                body: JSON.stringify({ archivo_id, signature }),\n            });\n\n            const data = await response.json();\n            setVerificationResult(data.isValid ? 'Firma v치lida' : 'Firma inv치lida');\n        } catch (error) {\n            console.error('Error al verificar la firma:', error);\n            setVerificationResult('Error al verificar la firma');\n        }\n    };\n\n    return (\n        <div>\n            <h2>Verificar Firma</h2>\n            <select\n                value={selectedSignature}\n                onChange={(e) => setSelectedSignature(e.target.value)}\n            >\n                <option value=\"\">Seleccione una firma</option>\n                {signatures.map((sig) => (\n                    <option key={sig.id} value={`${sig.archivo_id},${sig.signature}`}>\n                        Archivo ID: {sig.archivo_id} - Fecha: {new Date(sig.created_at).toLocaleString()}\n                    </option>\n                ))}\n            </select>\n            <button onClick={handleVerifySignature}>Verificar Firma</button>\n            {verificationResult && <p>{verificationResult}</p>}\n        </div>\n    );\n}\n\nexport default VerifySignature;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}