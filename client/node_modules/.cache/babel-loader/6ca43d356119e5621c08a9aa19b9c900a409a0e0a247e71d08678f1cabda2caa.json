{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProyDip\\\\ProyDip\\\\client\\\\src\\\\SignSharedFile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignFile({\n  token\n}) {\n  _s();\n  const [archivoId, setArchivoId] = useState('');\n  const [privateKeyFile, setPrivateKeyFile] = useState(null);\n  const [userFiles, setUserFiles] = useState([]); // Inicializamos como arreglo vacío\n  const [username, setUsername] = useState('');\n  useEffect(() => {\n    const decodedToken = jwtDecode(token);\n    setUsername(decodedToken.username);\n    const fetchUserFiles = async () => {\n      try {\n        const response = await fetch(`${process.env.REACT_APP_API_URL}/api/files/user-shared-files`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        const files = await response.json();\n        if (Array.isArray(files)) {\n          setUserFiles(files);\n        } else {\n          console.error('Error: La respuesta no es un arreglo.', files);\n          setUserFiles([]); // Asegurarse de que sea un arreglo vacío en caso de error\n        }\n      } catch (error) {\n        console.error('Error al obtener los archivos:', error);\n        setUserFiles([]); // Asegurarse de que sea un arreglo vacío en caso de error\n      }\n    };\n    fetchUserFiles();\n  }, [token]);\n  const handlePrivateKeyUpload = e => {\n    setPrivateKeyFile(e.target.files[0]);\n  };\n  const handleSignFile = async () => {\n    if (!privateKeyFile || !archivoId) {\n      alert('Por favor, selecciona un archivo y carga la clave privada.');\n      return;\n    }\n    const privateKey = await privateKeyFile.text();\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/files/sign`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          archivo_id: archivoId,\n          privateKey\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Error al firmar el archivo');\n      }\n      const data = await response.json();\n      alert(`Archivo firmado exitosamente. Firma: ${data.signature}`);\n    } catch (error) {\n      console.error('Error al firmar el archivo:', error);\n      alert('Error al firmar el archivo');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Firmar Archivo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: archivoId,\n      onChange: e => setArchivoId(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Selecciona un archivo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), userFiles.length > 0 ? userFiles.map(file => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: file.id,\n        children: file.nombre_archivo\n      }, file.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"No tienes archivos subidos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".pem\",\n      onChange: handlePrivateKeyUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignFile,\n      children: \"Firmar Archivo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n_s(SignFile, \"A8N1XaVzJJSgNdw0QFNRgR4kZCk=\");\n_c = SignFile;\nexport default SignFile;\nvar _c;\n$RefreshReg$(_c, \"SignFile\");","map":{"version":3,"names":["React","useState","useEffect","jwtDecode","jsxDEV","_jsxDEV","SignFile","token","_s","archivoId","setArchivoId","privateKeyFile","setPrivateKeyFile","userFiles","setUserFiles","username","setUsername","decodedToken","fetchUserFiles","response","fetch","process","env","REACT_APP_API_URL","headers","files","json","Array","isArray","console","error","handlePrivateKeyUpload","e","target","handleSignFile","alert","privateKey","text","method","body","JSON","stringify","archivo_id","ok","Error","data","signature","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","length","map","file","id","nombre_archivo","type","accept","onClick","_c","$RefreshReg$"],"sources":["D:/ProyDip/ProyDip/client/src/SignSharedFile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nfunction SignFile({ token }) {\r\n    const [archivoId, setArchivoId] = useState('');\r\n    const [privateKeyFile, setPrivateKeyFile] = useState(null);\r\n    const [userFiles, setUserFiles] = useState([]); // Inicializamos como arreglo vacío\r\n    const [username, setUsername] = useState('');\r\n\r\n    useEffect(() => {\r\n        const decodedToken = jwtDecode(token);\r\n        setUsername(decodedToken.username);\r\n    \r\n        const fetchUserFiles = async () => {\r\n            try {\r\n                const response = await fetch(`${process.env.REACT_APP_API_URL}/api/files/user-shared-files`, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`,\r\n                    },\r\n                });\r\n    \r\n                const files = await response.json();\r\n                if (Array.isArray(files)) {\r\n                    setUserFiles(files);\r\n                } else {\r\n                    console.error('Error: La respuesta no es un arreglo.', files);\r\n                    setUserFiles([]); // Asegurarse de que sea un arreglo vacío en caso de error\r\n                }\r\n            } catch (error) {\r\n                console.error('Error al obtener los archivos:', error);\r\n                setUserFiles([]); // Asegurarse de que sea un arreglo vacío en caso de error\r\n            }\r\n        };\r\n    \r\n        fetchUserFiles();\r\n    }, [token]);\r\n    \r\n    const handlePrivateKeyUpload = (e) => {\r\n        setPrivateKeyFile(e.target.files[0]);\r\n    };\r\n\r\n    const handleSignFile = async () => {\r\n        if (!privateKeyFile || !archivoId) {\r\n            alert('Por favor, selecciona un archivo y carga la clave privada.');\r\n            return;\r\n        }\r\n\r\n        const privateKey = await privateKeyFile.text();\r\n\r\n        try {\r\n            const response = await fetch(`${process.env.REACT_APP_API_URL}/api/files/sign`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                },\r\n                body: JSON.stringify({ archivo_id: archivoId, privateKey }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Error al firmar el archivo');\r\n            }\r\n\r\n            const data = await response.json();\r\n            alert(`Archivo firmado exitosamente. Firma: ${data.signature}`);\r\n        } catch (error) {\r\n            console.error('Error al firmar el archivo:', error);\r\n            alert('Error al firmar el archivo');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Firmar Archivo</h2>\r\n            <select value={archivoId} onChange={(e) => setArchivoId(e.target.value)}>\r\n                <option value=\"\">Selecciona un archivo</option>\r\n                {userFiles.length > 0 ? (\r\n                    userFiles.map((file) => (\r\n                        <option key={file.id} value={file.id}>{file.nombre_archivo}</option>\r\n                    ))\r\n                ) : (\r\n                    <option value=\"\">No tienes archivos subidos</option>\r\n                )}\r\n            </select>\r\n            <input type=\"file\" accept=\".pem\" onChange={handlePrivateKeyUpload} />\r\n            <button onClick={handleSignFile}>Firmar Archivo</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignFile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}