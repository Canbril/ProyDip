{"ast":null,"code":"var _jsxFileName = \"/home/canbril/Documentos/Prueba/ProyDip/client/src/VerifySignature.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VerifySignature({\n  token\n}) {\n  _s();\n  const [signedFiles, setSignedFiles] = useState([]);\n  const [selectedFile, setSelectedFile] = useState('');\n  const [signature, setSignature] = useState('');\n  const [isValid, setIsValid] = useState(null);\n  useEffect(() => {\n    const fetchSignedFiles = async () => {\n      try {\n        const response = await fetch(`${process.env.REACT_APP_API_URL}/api/files/signed-files`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) throw new Error('Error al obtener archivos firmados');\n        const data = await response.json();\n        setSignedFiles(data);\n      } catch (error) {\n        console.error('Error al obtener archivos firmados:', error);\n      }\n    };\n    fetchSignedFiles();\n  }, [token]);\n  const handleVerifySignature = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/files/verify`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          archivo_id: selectedFile,\n          signature\n        })\n      });\n      if (!response.ok) throw new Error('Error al verificar la firma');\n      const data = await response.json();\n      setIsValid(data.isValid);\n    } catch (error) {\n      console.error('Error al verificar la firma:', error);\n      setIsValid(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Verificar Firma\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedFile,\n      onChange: e => setSelectedFile(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Seleccione un archivo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), signedFiles.map(file => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: file.id,\n        children: file.nombre_archivo\n      }, file.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Ingrese la firma\",\n      value: signature,\n      onChange: e => setSignature(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleVerifySignature,\n      children: \"Verificar Firma\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), isValid !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: isValid ? 'Firma v치lida' : 'Firma no v치lida'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(VerifySignature, \"LMeesx9buhLhsp5rkaj5qNvn/Iw=\");\n_c = VerifySignature;\nexport default VerifySignature;\nvar _c;\n$RefreshReg$(_c, \"VerifySignature\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","VerifySignature","token","_s","signedFiles","setSignedFiles","selectedFile","setSelectedFile","signature","setSignature","isValid","setIsValid","fetchSignedFiles","response","fetch","process","env","REACT_APP_API_URL","headers","ok","Error","data","json","error","console","handleVerifySignature","method","body","JSON","stringify","archivo_id","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","file","id","nombre_archivo","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/canbril/Documentos/Prueba/ProyDip/client/src/VerifySignature.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction VerifySignature({ token }) {\n    const [signedFiles, setSignedFiles] = useState([]);\n    const [selectedFile, setSelectedFile] = useState('');\n    const [signature, setSignature] = useState('');\n    const [isValid, setIsValid] = useState(null);\n\n    useEffect(() => {\n        const fetchSignedFiles = async () => {\n            try {\n                const response = await fetch(`${process.env.REACT_APP_API_URL}/api/files/signed-files`, {\n                    headers: {\n                        'Authorization': `Bearer ${token}`\n                    }\n                });\n\n                if (!response.ok) throw new Error('Error al obtener archivos firmados');\n                \n                const data = await response.json();\n                setSignedFiles(data);\n            } catch (error) {\n                console.error('Error al obtener archivos firmados:', error);\n            }\n        };\n\n        fetchSignedFiles();\n    }, [token]);\n\n    const handleVerifySignature = async () => {\n        try {\n            const response = await fetch(`${process.env.REACT_APP_API_URL}/api/files/verify`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                },\n                body: JSON.stringify({ archivo_id: selectedFile, signature })\n            });\n\n            if (!response.ok) throw new Error('Error al verificar la firma');\n\n            const data = await response.json();\n            setIsValid(data.isValid);\n        } catch (error) {\n            console.error('Error al verificar la firma:', error);\n            setIsValid(false);\n        }\n    };\n\n    return (\n        <div>\n            <h2>Verificar Firma</h2>\n            <select\n                value={selectedFile}\n                onChange={(e) => setSelectedFile(e.target.value)}\n            >\n                <option value=\"\">Seleccione un archivo</option>\n                {signedFiles.map((file) => (\n                    <option key={file.id} value={file.id}>\n                        {file.nombre_archivo}\n                    </option>\n                ))}\n            </select>\n            <textarea\n                placeholder=\"Ingrese la firma\"\n                value={signature}\n                onChange={(e) => setSignature(e.target.value)}\n            />\n            <button onClick={handleVerifySignature}>Verificar Firma</button>\n\n            {isValid !== null && (\n                <p>{isValid ? 'Firma v치lida' : 'Firma no v치lida'}</p>\n            )}\n        </div>\n    );\n}\n\nexport default VerifySignature;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}