{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProyDip\\\\ProyDip\\\\client\\\\src\\\\SignSharedFile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignSharedFile({\n  token\n}) {\n  _s();\n  const [sharedFileId, setSharedFileId] = useState('');\n  const [privateKeyFile, setPrivateKeyFile] = useState(null);\n  const [sharedFiles, setSharedFiles] = useState([]);\n  const [username, setUsername] = useState('');\n  useEffect(() => {\n    const decodedToken = jwtDecode(token);\n    setUsername(decodedToken.username);\n    const fetchSharedFiles = async () => {\n      try {\n        const response = await fetch(`${process.env.REACT_APP_API_URL}/api/files/sign-shared`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const files = await response.json();\n        if (Array.isArray(files)) {\n          setSharedFiles(files);\n        } else {\n          console.error('Error: La respuesta no es un arreglo.', files);\n          setSharedFiles([]);\n        }\n      } catch (error) {\n        console.error('Error al obtener los archivos compartidos:', error);\n        setSharedFiles([]);\n      }\n    };\n    fetchSharedFiles();\n  }, [token]);\n  const handlePrivateKeyUpload = e => {\n    setPrivateKeyFile(e.target.files[0]);\n  };\n  const handleSignSharedFile = async () => {\n    if (!privateKeyFile || !sharedFileId) {\n      alert('Por favor, selecciona un archivo compartido y carga la clave privada.');\n      return;\n    }\n    const privateKey = await privateKeyFile.text();\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/files/sign-shared`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          archivo_id: sharedFileId,\n          privateKey\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Error al firmar el archivo compartido');\n      }\n      const data = await response.json();\n      alert(`Archivo compartido firmado exitosamente. Firma: ${data.signature}`);\n    } catch (error) {\n      console.error('Error al firmar el archivo compartido:', error);\n      alert('Error al firmar el archivo compartido');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Firmar Archivo Compartido\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: sharedFileId,\n      onChange: e => setSharedFileId(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Selecciona un archivo compartido\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), sharedFiles.length > 0 ? sharedFiles.map(file => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: file.id,\n        children: file.nombre_archivo\n      }, file.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"No tienes archivos compartidos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".pem\",\n      onChange: handlePrivateKeyUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignSharedFile,\n      children: \"Firmar Archivo Compartido\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n_s(SignSharedFile, \"W71IUs18Bk3m+O1lMahtTFBZJ4g=\");\n_c = SignSharedFile;\nexport default SignSharedFile;\nvar _c;\n$RefreshReg$(_c, \"SignSharedFile\");","map":{"version":3,"names":["React","useState","useEffect","jwtDecode","jsxDEV","_jsxDEV","SignSharedFile","token","_s","sharedFileId","setSharedFileId","privateKeyFile","setPrivateKeyFile","sharedFiles","setSharedFiles","username","setUsername","decodedToken","fetchSharedFiles","response","fetch","process","env","REACT_APP_API_URL","headers","ok","Error","status","files","json","Array","isArray","console","error","handlePrivateKeyUpload","e","target","handleSignSharedFile","alert","privateKey","text","method","body","JSON","stringify","archivo_id","data","signature","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","length","map","file","id","nombre_archivo","type","accept","onClick","_c","$RefreshReg$"],"sources":["D:/ProyDip/ProyDip/client/src/SignSharedFile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nfunction SignSharedFile({ token }) {\r\n    const [sharedFileId, setSharedFileId] = useState('');\r\n    const [privateKeyFile, setPrivateKeyFile] = useState(null);\r\n    const [sharedFiles, setSharedFiles] = useState([]);\r\n    const [username, setUsername] = useState('');\r\n\r\n    useEffect(() => {\r\n        const decodedToken = jwtDecode(token);\r\n        setUsername(decodedToken.username);\r\n\r\n        const fetchSharedFiles = async () => {\r\n            try {\r\n                const response = await fetch(`${process.env.REACT_APP_API_URL}/api/files/sign-shared`, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`,\r\n                    },\r\n                });\r\n        \r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! status: ${response.status}`);\r\n                }\r\n        \r\n                const files = await response.json();\r\n                if (Array.isArray(files)) {\r\n                    setSharedFiles(files);\r\n                } else {\r\n                    console.error('Error: La respuesta no es un arreglo.', files);\r\n                    setSharedFiles([]);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error al obtener los archivos compartidos:', error);\r\n                setSharedFiles([]);\r\n            }\r\n        };\r\n        \r\n\r\n        fetchSharedFiles();\r\n    }, [token]);\r\n\r\n    const handlePrivateKeyUpload = (e) => {\r\n        setPrivateKeyFile(e.target.files[0]);\r\n    };\r\n\r\n    const handleSignSharedFile = async () => {\r\n        if (!privateKeyFile || !sharedFileId) {\r\n            alert('Por favor, selecciona un archivo compartido y carga la clave privada.');\r\n            return;\r\n        }\r\n\r\n        const privateKey = await privateKeyFile.text();\r\n\r\n        try {\r\n            const response = await fetch(`${process.env.REACT_APP_API_URL}/api/files/sign-shared`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify({ archivo_id: sharedFileId, privateKey }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Error al firmar el archivo compartido');\r\n            }\r\n\r\n            const data = await response.json();\r\n            alert(`Archivo compartido firmado exitosamente. Firma: ${data.signature}`);\r\n        } catch (error) {\r\n            console.error('Error al firmar el archivo compartido:', error);\r\n            alert('Error al firmar el archivo compartido');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Firmar Archivo Compartido</h2>\r\n            <select value={sharedFileId} onChange={(e) => setSharedFileId(e.target.value)}>\r\n                <option value=\"\">Selecciona un archivo compartido</option>\r\n                {sharedFiles.length > 0 ? (\r\n                    sharedFiles.map((file) => (\r\n                        <option key={file.id} value={file.id}>{file.nombre_archivo}</option>\r\n                    ))\r\n                ) : (\r\n                    <option value=\"\">No tienes archivos compartidos</option>\r\n                )}\r\n            </select>\r\n            <input type=\"file\" accept=\".pem\" onChange={handlePrivateKeyUpload} />\r\n            <button onClick={handleSignSharedFile}>Firmar Archivo Compartido</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignSharedFile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}