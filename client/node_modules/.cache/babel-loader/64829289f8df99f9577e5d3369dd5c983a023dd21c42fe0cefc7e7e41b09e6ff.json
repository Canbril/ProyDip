{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProyDip\\\\ProyDip\\\\client\\\\src\\\\SignSharedFile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignSharedFile({\n  token\n}) {\n  _s();\n  const [archivoId, setArchivoId] = useState('');\n  const [privateKeyFile, setPrivateKeyFile] = useState(null);\n  const [sharedFiles, setSharedFiles] = useState([]); // Archivos compartidos con el usuario\n  const [username, setUsername] = useState('');\n  useEffect(() => {\n    const decodedToken = jwtDecode(token);\n    setUsername(decodedToken.username);\n\n    // Obtener los archivos compartidos\n    const fetchSharedFiles = async () => {\n      try {\n        const response = await fetch(`${process.env.REACT_APP_API_URL}/api/files/shared-files`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        const files = await response.json();\n        if (Array.isArray(files)) {\n          setSharedFiles(files);\n        } else {\n          console.error('Error: La respuesta no es un arreglo.', files);\n          setSharedFiles([]);\n        }\n      } catch (error) {\n        console.error('Error al obtener los archivos compartidos:', error);\n        setSharedFiles([]);\n      }\n    };\n    fetchSharedFiles();\n  }, [token]);\n  const handlePrivateKeyUpload = e => {\n    setPrivateKeyFile(e.target.files[0]); // Guardar el archivo .pem en el estado\n  };\n  const handleSignFile = async () => {\n    if (!privateKeyFile || !archivoId) {\n      alert('Por favor, selecciona un archivo y carga la clave privada.');\n      return;\n    }\n\n    // Verifica el valor de archivoId\n    console.log('Archivo ID:', archivoId);\n\n    // Asegúrate de que archivoId sea un número\n    const archivoIdInt = parseInt(archivoId, 10);\n    if (isNaN(archivoIdInt)) {\n      alert('ID de archivo inválido');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('archivo_id', archivoIdInt); // Enviar el ID como número\n    formData.append('file', privateKeyFile); // Subir el archivo .pem\n\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/files/sign-shared`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        body: formData // Enviar FormData que incluye el archivo\n      });\n      if (!response.ok) {\n        const errorData = await response.json(); // Obtener detalles del error\n        console.error('Error en la respuesta del servidor:', errorData);\n        throw new Error(`Error al firmar el archivo: ${errorData.message || 'Desconocido'}`);\n      }\n      const data = await response.json();\n      alert(`Archivo firmado exitosamente. Firma: ${data.signature}`);\n    } catch (error) {\n      console.error('Error al firmar el archivo:', error);\n      alert(`Error al firmar el archivo: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Firmar Archivo Compartido\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: archivoId,\n      onChange: e => setArchivoId(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Selecciona un archivo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), sharedFiles.length > 0 ? sharedFiles.map(file => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: file.id,\n        children: file.nombre_archivo\n      }, file.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"No tienes archivos compartidos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".pem\",\n      onChange: handlePrivateKeyUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignFile,\n      children: \"Firmar Archivo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n_s(SignSharedFile, \"iaOl+GNVaZpESTXETsgNF/3YQQU=\");\n_c = SignSharedFile;\nexport default SignSharedFile;\nvar _c;\n$RefreshReg$(_c, \"SignSharedFile\");","map":{"version":3,"names":["React","useState","useEffect","jwtDecode","jsxDEV","_jsxDEV","SignSharedFile","token","_s","archivoId","setArchivoId","privateKeyFile","setPrivateKeyFile","sharedFiles","setSharedFiles","username","setUsername","decodedToken","fetchSharedFiles","response","fetch","process","env","REACT_APP_API_URL","headers","files","json","Array","isArray","console","error","handlePrivateKeyUpload","e","target","handleSignFile","alert","log","archivoIdInt","parseInt","isNaN","formData","FormData","append","method","body","ok","errorData","Error","message","data","signature","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","length","map","file","id","nombre_archivo","type","accept","onClick","_c","$RefreshReg$"],"sources":["D:/ProyDip/ProyDip/client/src/SignSharedFile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nfunction SignSharedFile({ token }) {\r\n    const [archivoId, setArchivoId] = useState('');\r\n    const [privateKeyFile, setPrivateKeyFile] = useState(null);\r\n    const [sharedFiles, setSharedFiles] = useState([]); // Archivos compartidos con el usuario\r\n    const [username, setUsername] = useState('');\r\n\r\n    useEffect(() => {\r\n        const decodedToken = jwtDecode(token);\r\n        setUsername(decodedToken.username);\r\n\r\n        // Obtener los archivos compartidos\r\n        const fetchSharedFiles = async () => {\r\n            try {\r\n                const response = await fetch(`${process.env.REACT_APP_API_URL}/api/files/shared-files`, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`,\r\n                    },\r\n                });\r\n\r\n                const files = await response.json();\r\n                if (Array.isArray(files)) {\r\n                    setSharedFiles(files);\r\n                } else {\r\n                    console.error('Error: La respuesta no es un arreglo.', files);\r\n                    setSharedFiles([]);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error al obtener los archivos compartidos:', error);\r\n                setSharedFiles([]);\r\n            }\r\n        };\r\n\r\n        fetchSharedFiles();\r\n    }, [token]);\r\n\r\n    const handlePrivateKeyUpload = (e) => {\r\n        setPrivateKeyFile(e.target.files[0]);  // Guardar el archivo .pem en el estado\r\n    };\r\n\r\n    const handleSignFile = async () => {\r\n        if (!privateKeyFile || !archivoId) {\r\n            alert('Por favor, selecciona un archivo y carga la clave privada.');\r\n            return;\r\n        }\r\n\r\n        // Verifica el valor de archivoId\r\n        console.log('Archivo ID:', archivoId);\r\n\r\n        // Asegúrate de que archivoId sea un número\r\n        const archivoIdInt = parseInt(archivoId, 10);\r\n        if (isNaN(archivoIdInt)) {\r\n            alert('ID de archivo inválido');\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append('archivo_id', archivoIdInt);  // Enviar el ID como número\r\n        formData.append('file', privateKeyFile);     // Subir el archivo .pem\r\n\r\n        try {\r\n            const response = await fetch(`${process.env.REACT_APP_API_URL}/api/files/sign-shared`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                },\r\n                body: formData, // Enviar FormData que incluye el archivo\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorData = await response.json();  // Obtener detalles del error\r\n                console.error('Error en la respuesta del servidor:', errorData);\r\n                throw new Error(`Error al firmar el archivo: ${errorData.message || 'Desconocido'}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n            alert(`Archivo firmado exitosamente. Firma: ${data.signature}`);\r\n        } catch (error) {\r\n            console.error('Error al firmar el archivo:', error);\r\n            alert(`Error al firmar el archivo: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Firmar Archivo Compartido</h2>\r\n            <select value={archivoId} onChange={(e) => setArchivoId(e.target.value)}>\r\n                <option value=\"\">Selecciona un archivo</option>\r\n                {sharedFiles.length > 0 ? (\r\n                    sharedFiles.map((file) => (\r\n                        <option key={file.id} value={file.id}>{file.nombre_archivo}</option>\r\n                    ))\r\n                ) : (\r\n                    <option value=\"\">No tienes archivos compartidos</option>\r\n                )}\r\n            </select>\r\n\r\n            <input type=\"file\" accept=\".pem\" onChange={handlePrivateKeyUpload} />\r\n            <button onClick={handleSignFile}>Firmar Archivo</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignSharedFile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}