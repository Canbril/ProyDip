{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProyDip\\\\ProyDip\\\\client\\\\src\\\\ShareFile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShareFile = ({\n  token\n}) => {\n  _s();\n  const [userFiles, setUserFiles] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [canSign, setCanSign] = useState(false);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    // Obtener los archivos del usuario\n    const fetchUserFiles = async () => {\n      const response = await fetch('http://localhost:5000/api/files/user-files', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n      setUserFiles(data);\n    };\n\n    // Obtener la lista de usuarios\n    const fetchUsers = async () => {\n      const response = await fetch('http://localhost:5000/api/users', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n      setUsers(data);\n    };\n    fetchUserFiles();\n    fetchUsers();\n  }, [token]);\n  const handleShare = async () => {\n    if (!selectedFile || !selectedUser) {\n      setMessage('Selecciona un archivo y un usuario para compartir.');\n      return;\n    }\n    const response = await fetch('http://localhost:5000/api/files/share', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        archivo_id: selectedFile,\n        user_to_share_id: selectedUser,\n        puede_firmar: canSign\n      })\n    });\n    const data = await response.json();\n    setMessage(data.message || data.error);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Compartir Archivo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Seleccionar Archivo:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedFile(e.target.value),\n        value: selectedFile,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Selecciona un archivo --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), userFiles.map(file => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: file.id,\n          children: file.nombre_archivo\n        }, file.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Seleccionar Usuario:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedUser(e.target.value),\n        value: selectedUser,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Selecciona un usuario --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: user.id,\n          children: user.username\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\xBFPuede Firmar?:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: canSign,\n        onChange: () => setCanSign(!canSign)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleShare,\n      children: \"Compartir Archivo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(ShareFile, \"5SHy2n0EgxdbdF+4He7qebCAwUo=\");\n_c = ShareFile;\nexport default ShareFile;\nvar _c;\n$RefreshReg$(_c, \"ShareFile\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ShareFile","token","_s","userFiles","setUserFiles","users","setUsers","selectedFile","setSelectedFile","selectedUser","setSelectedUser","canSign","setCanSign","message","setMessage","fetchUserFiles","response","fetch","headers","data","json","fetchUsers","handleShare","method","body","JSON","stringify","archivo_id","user_to_share_id","puede_firmar","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","map","file","id","nombre_archivo","user","username","type","checked","onClick","_c","$RefreshReg$"],"sources":["D:/ProyDip/ProyDip/client/src/ShareFile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst ShareFile = ({ token }) => {\r\n    const [userFiles, setUserFiles] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [selectedUser, setSelectedUser] = useState(null);\r\n    const [canSign, setCanSign] = useState(false);\r\n    const [message, setMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Obtener los archivos del usuario\r\n        const fetchUserFiles = async () => {\r\n            const response = await fetch('http://localhost:5000/api/files/user-files', {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            });\r\n            const data = await response.json();\r\n            setUserFiles(data);\r\n        };\r\n\r\n        // Obtener la lista de usuarios\r\n        const fetchUsers = async () => {\r\n            const response = await fetch('http://localhost:5000/api/users', {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            });\r\n            const data = await response.json();\r\n            setUsers(data);\r\n        };\r\n\r\n        fetchUserFiles();\r\n        fetchUsers();\r\n    }, [token]);\r\n\r\n    const handleShare = async () => {\r\n        if (!selectedFile || !selectedUser) {\r\n            setMessage('Selecciona un archivo y un usuario para compartir.');\r\n            return;\r\n        }\r\n\r\n        const response = await fetch('http://localhost:5000/api/files/share', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({\r\n                archivo_id: selectedFile,\r\n                user_to_share_id: selectedUser,\r\n                puede_firmar: canSign\r\n            })\r\n        });\r\n\r\n        const data = await response.json();\r\n        setMessage(data.message || data.error);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Compartir Archivo</h2>\r\n            <div>\r\n                <label>Seleccionar Archivo:</label>\r\n                <select onChange={(e) => setSelectedFile(e.target.value)} value={selectedFile}>\r\n                    <option value=\"\">-- Selecciona un archivo --</option>\r\n                    {userFiles.map(file => (\r\n                        <option key={file.id} value={file.id}>{file.nombre_archivo}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <div>\r\n                <label>Seleccionar Usuario:</label>\r\n                <select onChange={(e) => setSelectedUser(e.target.value)} value={selectedUser}>\r\n                    <option value=\"\">-- Selecciona un usuario --</option>\r\n                    {users.map(user => (\r\n                        <option key={user.id} value={user.id}>{user.username}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <div>\r\n                <label>Â¿Puede Firmar?:</label>\r\n                <input \r\n                    type=\"checkbox\" \r\n                    checked={canSign} \r\n                    onChange={() => setCanSign(!canSign)} \r\n                />\r\n            </div>\r\n            <button onClick={handleShare}>Compartir Archivo</button>\r\n            {message && <p>{message}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ShareFile;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMkB,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,EAAE;QACvEC,OAAO,EAAE;UACL,eAAe,EAAE,UAAUjB,KAAK;QACpC;MACJ,CAAC,CAAC;MACF,MAAMkB,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAClChB,YAAY,CAACe,IAAI,CAAC;IACtB,CAAC;;IAED;IACA,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAML,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QAC5DC,OAAO,EAAE;UACL,eAAe,EAAE,UAAUjB,KAAK;QACpC;MACJ,CAAC,CAAC;MACF,MAAMkB,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAClCd,QAAQ,CAACa,IAAI,CAAC;IAClB,CAAC;IAEDJ,cAAc,CAAC,CAAC;IAChBM,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,CAACpB,KAAK,CAAC,CAAC;EAEX,MAAMqB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI,CAACf,YAAY,IAAI,CAACE,YAAY,EAAE;MAChCK,UAAU,CAAC,oDAAoD,CAAC;MAChE;IACJ;IAEA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;MAClEM,MAAM,EAAE,MAAM;MACdL,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,UAAUjB,KAAK;MACpC,CAAC;MACDuB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,UAAU,EAAEpB,YAAY;QACxBqB,gBAAgB,EAAEnB,YAAY;QAC9BoB,YAAY,EAAElB;MAClB,CAAC;IACL,CAAC,CAAC;IAEF,MAAMQ,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAClCN,UAAU,CAACK,IAAI,CAACN,OAAO,IAAIM,IAAI,CAACW,KAAK,CAAC;EAC1C,CAAC;EAED,oBACI/B,OAAA;IAAAgC,QAAA,gBACIhC,OAAA;MAAAgC,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BpC,OAAA;MAAAgC,QAAA,gBACIhC,OAAA;QAAAgC,QAAA,EAAO;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnCpC,OAAA;QAAQqC,QAAQ,EAAGC,CAAC,IAAK7B,eAAe,CAAC6B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QAACA,KAAK,EAAEhC,YAAa;QAAAwB,QAAA,gBAC1EhC,OAAA;UAAQwC,KAAK,EAAC,EAAE;UAAAR,QAAA,EAAC;QAA2B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACpDhC,SAAS,CAACqC,GAAG,CAACC,IAAI,iBACf1C,OAAA;UAAsBwC,KAAK,EAAEE,IAAI,CAACC,EAAG;UAAAX,QAAA,EAAEU,IAAI,CAACE;QAAc,GAA7CF,IAAI,CAACC,EAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA+C,CACtE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eACNpC,OAAA;MAAAgC,QAAA,gBACIhC,OAAA;QAAAgC,QAAA,EAAO;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnCpC,OAAA;QAAQqC,QAAQ,EAAGC,CAAC,IAAK3B,eAAe,CAAC2B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QAACA,KAAK,EAAE9B,YAAa;QAAAsB,QAAA,gBAC1EhC,OAAA;UAAQwC,KAAK,EAAC,EAAE;UAAAR,QAAA,EAAC;QAA2B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACpD9B,KAAK,CAACmC,GAAG,CAACI,IAAI,iBACX7C,OAAA;UAAsBwC,KAAK,EAAEK,IAAI,CAACF,EAAG;UAAAX,QAAA,EAAEa,IAAI,CAACC;QAAQ,GAAvCD,IAAI,CAACF,EAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAyC,CAChE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eACNpC,OAAA;MAAAgC,QAAA,gBACIhC,OAAA;QAAAgC,QAAA,EAAO;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC9BpC,OAAA;QACI+C,IAAI,EAAC,UAAU;QACfC,OAAO,EAAEpC,OAAQ;QACjByB,QAAQ,EAAEA,CAAA,KAAMxB,UAAU,CAAC,CAACD,OAAO;MAAE;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNpC,OAAA;MAAQiD,OAAO,EAAE1B,WAAY;MAAAS,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACvDtB,OAAO,iBAAId,OAAA;MAAAgC,QAAA,EAAIlB;IAAO;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEd,CAAC;AAACjC,EAAA,CA3FIF,SAAS;AAAAiD,EAAA,GAATjD,SAAS;AA6Ff,eAAeA,SAAS;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}