services:
  # BASE DE DATOS
  database:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./database/data/:/var/lib/postgresql/data
      - ./database/data.sql:/docker-entrypoint-initdb.d/data.sql  # Montar el archivo data.sql para inicializar la base de datos
    networks:
      - dmz

  #------------------------------FIREWALL-----------------------
  firewall:
    build:
      context: firewall
      dockerfile: Dockerfile
    container_name: firewall
    networks:
      - dmz
      - lan
    cap_add:
      - NET_ADMIN
    sysctls:
      - net.ipv4.ip_forward=1 #Permite que el FW enrute entre redes
    ports:
      - 5000:5000
      - 3000:3000
    
    #--------------------------Contenedor para el servicio web--------------
  
  frontend:
    container_name: react-client
    networks:
      - dmz
    build:
      context: client
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
    depends_on:
      - firewall

  # BACKEND
  backend:
    build:
      context: server
      dockerfile: Dockerfile
    container_name: backend
    networks:
      - dmz
    depends_on:
      - firewall

networks:
  dmz:
    driver: bridge
    ipam:
      config:
        - subnet: ${NETWORK_DMZ}
  
  lan:
    driver: bridge
    ipam:
      config:
        - subnet: ${NETWORK_LAN}
